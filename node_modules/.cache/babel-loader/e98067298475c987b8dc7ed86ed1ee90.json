{"ast":null,"code":"import _slicedToArray from\"/home/diego/projectos/Redes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Input,message,Table,Form,Button,InputNumber}from'antd';import useForm from'../../Hook/useForm.js';function Home(){document.title=\"Calculadora de Subredes\";var _useForm=useForm(),_useForm2=_slicedToArray(_useForm,2),form=_useForm2[0],formedit=_useForm2[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),valido=_useState4[0],setValido=_useState4[1];var columns=[{title:\"Numero de Subred\",dataIndex:\"subred\",key:'subred'},{title:\"Direccion de Subred\",dataIndex:\"direccion\",key:'direccion'},{title:\"Primer dir IP Host\",dataIndex:\"pip\",key:'pip'},{title:\"Ultima dir IP Host\",dataIndex:\"uip\",key:'uip'},{title:\"Dir Brodcast\",dataIndex:\"brodcast\",key:'brodcast'},{title:\"Mascara\",dataIndex:\"mascara\",key:'mascara'}];var pushear=function pushear(){if(form.direccionIP&&form.numSub){var direccion=form.direccionIP.split(\".\");var numSub=parseInt(form.numSub,10);var isnum=/^\\d+$/.test(numSub);if(!isnum){setValido(\"Ingresa un numero de subredes valido\");setData([]);}if(direccion.length!==4){setValido(\"Direccion no valida ingresa otra con el formato punteado\");setData([]);}else{if(checarDireccion(direccion)){var clase=calcularClase(parseInt(direccion[0],10),numSub);if(cabe(numSub,clase)){var mascara=calcularMascara(clase,numSub);var red=calcularDireccionRed(clase,direccion);var brodcast=direccionBrodcast(red,clase);var nuevos=crearSubredes(red,numSub,mascara,brodcast);setData(nuevos);}else{setValido(\"Eres ambicisioso pero no caben tantas subredes en tu direccion IP, prueba otra\");setData([]);}}}}else{setValido(\"Porfavor ingresa todos los campos  \");setData([]);}};var crearSubredes=function crearSubredes(red,numSub,mascara,brodcast){var nuevosDatos=[];var tam=Math.pow(2,7-calcularBitsSub(numSub));for(var i=0;i<numSub;i++){red=calcularedActual(red,numSub,i);nuevosDatos.push({key:i,subred:i+1,direccion:calcularedActual(red,numSub,i).join(\".\"),pip:calcularPrimera(red,numSub,i).join(\".\"),uip:calcularUltima(red,numSub,i+1).join(\".\"),brodcast:brodcast.join(\".\"),mascara:mascara.join(\".\")});}return nuevosDatos;};var calcularedActual=function calcularedActual(red,numSub,actual){var nue=[];red.map(function(e){return nue.push(e);});var suma=actual*Math.pow(2,8-calcularBitsSub(numSub));for(var i=3;i>=0;i--){if(suma>=255){nue[i]=suma-255;suma=suma-255;}else{nue[i]=suma;i=-1;}}return nue;};var calcularPrimera=function calcularPrimera(red,numSub,actual){var nue=[];red.map(function(e){return nue.push(e);});nue=calcularedActual(nue,numSub,actual);for(var i=3;i>=0;i--){if(nue[i]<255){nue[i]=nue[i]+1;i=-1;}}return nue;};var calcularUltima=function calcularUltima(red,numSub,actual){var nue=[];red.map(function(e){return nue.push(e);});var suma=actual*Math.pow(2,8-calcularBitsSub(numSub));suma--;for(var i=3;i>=0;i--){if(suma>=255){nue[i]=suma-255;suma=suma-255;}else{nue[i]=suma;i=-1;}}return nue;};var checarDireccion=function checarDireccion(direccion){for(var i=0;i<direccion.length;i++){var valid=/^\\d+$/.test(direccion[i]);if(!valid||direccion[i].length<0&&direccion[i].length>4||direccion[i]>255){setValido(\"Direccion no valida ingresa otra con el formato punteado\");setData([]);return false;}}return true;};var cabe=function cabe(numSub,clase){if(clase===\"A\"&&numSub<=8388608)return true;else if(clase===\"B\"&&numSub<=32768)return true;else if(clase===\"C\"&&numSub<=128)return true;return false;};var calcularClase=function calcularClase(primerO,numSub){var clase;var bits=calcularBitsSub(numSub);if(primerO<=127)clase=\"A\";else if(primerO>127&&primerO<=191)clase=\"B\";else if(primerO>191&&primerO<=223)clase=\"C\";else if(primerO>223&&primerO<=239)clase=\"D\";else if(primerO>240&&primerO<=255)clase=\"E\";else{setValido(\"Red no valida ingresa otra\");setData([]);return\"F\";}setValido(\"Red Clase \"+clase+\" con \"+bits+\" bit para subnetting\");return clase;};var calcularDireccionRed=function calcularDireccionRed(clase,direccionIP){var red=direccionIP;if(clase==\"A\")red[(1,2,3)]=0;else if(clase==\"B\")red[(2,3)]=0;else if(clase==\"C\")red[3]=0;return red;};var calcularMascara=function calcularMascara(clase,numSub){var sub=calcularBitsSub(numSub);if(clase==\"A\")return prestarAhost([255,0,0,0],sub);else if(clase==\"B\")return prestarAhost([255,255,0,0],sub);else if(clase==\"C\")return prestarAhost([255,255,255,0],sub);else return prestarAhost([255,255,255,255],sub);};var prestarAhost=function prestarAhost(mascara,sub){var suma=0;for(var i=0;i<sub;i++){suma+=Math.pow(2,7-i);}for(var _i=0;_i<4;_i++){if(mascara[_i]!=255){if(suma>255){mascara[_i]=255;suma-=255;}else{mascara[_i]=suma;suma=0;_i=4;}}}return mascara;};var calcularBitsSub=function calcularBitsSub(numSub){var numero=1;while(Math.pow(2,numero)<numSub){numero++;}return numero;};var direccionBrodcast=function direccionBrodcast(red,clase){var nue=[];red.map(function(e){return nue.push(e);});if(clase===\"A\"){nue[(1,2,3)]=255;}else if(clase===\"B\"){nue[(2,3)]=255;}else if(clase===\"C\"){nue[3]=255;}return nue;};return/*#__PURE__*/React.createElement(\"div\",{className:\"negro\"},/*#__PURE__*/React.createElement(\"div\",{className:\"todo\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Bienvenido a calcular las subredes de una Direccion IP\"),/*#__PURE__*/React.createElement(\"h2\",null,\" Cual direccion quieres usar? \"),/*#__PURE__*/React.createElement(Form,{layout:\"vertical\"},/*#__PURE__*/React.createElement(\"label\",null,\" Direccion IP \"),/*#__PURE__*/React.createElement(Input,{placeholder:\"Ingresa tu direccion IP\",name:\"direccionIP\",onChange:function onChange(e){return formedit(e);}}),/*#__PURE__*/React.createElement(\"label\",null,\" Numero de Subredes \"),/*#__PURE__*/React.createElement(Input,{placeholder:\"Cuantas subredes deseas\",name:\"numSub\",type:\"number\",onChange:function onChange(e){return formedit(e);}}),/*#__PURE__*/React.createElement(Button,{type:\"primary\",onClick:pushear},\"Submit\")),/*#__PURE__*/React.createElement(\"h2\",null,valido),/*#__PURE__*/React.createElement(Table,{columns:columns,dataSource:data})));}export default Home;","map":{"version":3,"sources":["/home/diego/projectos/Redes/frontend/src/components/home/Home.js"],"names":["React","useEffect","useState","Input","message","Table","Form","Button","InputNumber","useForm","Home","document","title","form","formedit","data","setData","valido","setValido","columns","dataIndex","key","pushear","direccionIP","numSub","direccion","split","parseInt","isnum","test","length","checarDireccion","clase","calcularClase","cabe","mascara","calcularMascara","red","calcularDireccionRed","brodcast","direccionBrodcast","nuevos","crearSubredes","nuevosDatos","tam","calcularBitsSub","i","calcularedActual","push","subred","join","pip","calcularPrimera","uip","calcularUltima","actual","nue","map","e","suma","valid","primerO","bits","sub","prestarAhost","numero"],"mappings":"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","sourcesContent":["import React, {useEffect, useState }from 'react';\nimport { Input, message, Table, Form, Button, InputNumber } from 'antd';\nimport useForm from '../../Hook/useForm.js'\nfunction Home() {\n  document.title = \"Calculadora de Subredes\"\n  const [form,formedit] = useForm();\n  const [data, setData] = useState([]);\n  const [valido, setValido] = useState();\n  const columns = [\n    {\n      title: \"Numero de Subred\",\n      dataIndex: \"subred\",\n      key: 'subred',\n    },\n    {\n      title: \"Direccion de Subred\",\n      dataIndex: \"direccion\",\n      key: 'direccion',\n    },\n    {\n      title: \"Primer dir IP Host\",\n      dataIndex: \"pip\",\n      key: 'pip',\n    },\n    {\n      title: \"Ultima dir IP Host\",\n      dataIndex: \"uip\",\n      key: 'uip',\n    },\n    {\n      title: \"Dir Brodcast\",\n      dataIndex: \"brodcast\",\n      key: 'brodcast',\n    },\n    {\n      title: \"Mascara\",\n      dataIndex: \"mascara\",\n      key: 'mascara',\n    }\n\n  ]\n\n\n  const pushear = () =>{\n    if(form.direccionIP && form.numSub){\n      const direccion = form.direccionIP.split(\".\");\n      const numSub = parseInt(form.numSub,10);\n      let isnum = /^\\d+$/.test(numSub);\n      if(!isnum){\n        setValido(\"Ingresa un numero de subredes valido\");\n        setData([]);\n      }\n      if(direccion.length !== 4){\n        setValido(\"Direccion no valida ingresa otra con el formato punteado\");\n        setData([]);\n      }\n      else{\n        if(checarDireccion(direccion)){\n          const clase = calcularClase(parseInt(direccion[0],10),numSub);\n          if(cabe(numSub,clase)){\n            const mascara = calcularMascara(clase,numSub);\n            let red = calcularDireccionRed(clase,direccion);\n            const brodcast = direccionBrodcast(red,clase);\n            let nuevos = crearSubredes(red,numSub,mascara,brodcast);\n\n            setData(nuevos);\n          }else{\n            setValido(\"Eres ambicisioso pero no caben tantas subredes en tu direccion IP, prueba otra\");\n            setData([]);\n          }\n        }\n      }\n\n    }else{\n      setValido(\"Porfavor ingresa todos los campos  \")\n      setData([]);\n    }\n  }\n\n  const crearSubredes = (red,numSub,mascara,brodcast) =>{\n    let nuevosDatos = [];\n    const tam = 2 **(7-calcularBitsSub(numSub));\n    for(let i = 0; i < numSub; i++){\n        red = calcularedActual(red,numSub,i);\n        nuevosDatos.push({\n          key: i,\n          subred: i+1,\n          direccion: calcularedActual(red,numSub,i).join(\".\"),\n          pip:calcularPrimera(red,numSub,i).join(\".\"),\n          uip: calcularUltima(red,numSub,i+1).join(\".\"),\n          brodcast:brodcast.join(\".\"),\n          mascara:mascara.join(\".\")\n        })\n    }\n    return nuevosDatos;\n  }\n\n  const calcularedActual = (red,numSub,actual) =>{\n    let nue = [];\n    red.map(e=> nue.push(e));\n    let suma = actual * (2 ** (8-calcularBitsSub(numSub)));\n    for(let i = 3; i >= 0; i--){\n      if(suma >= 255){\n        nue[i] = suma - 255;\n        suma = suma - 255;\n      }\n      else{\n        nue[i] = suma;\n        i=-1;\n      }\n    }\n    return nue;\n  }\n\n  const calcularPrimera = (red,numSub,actual) =>{\n    let nue = [];\n    red.map(e=> nue.push(e));\n    nue = calcularedActual(nue,numSub,actual);\n    for(let i = 3; i >= 0; i--){\n      if(nue[i] < 255){\n        nue[i] = nue[i]+1;\n        i=-1;\n      }\n    }\n    return nue;\n  }\n\n  const calcularUltima = (red,numSub,actual) =>{\n    let nue = [];\n    red.map(e=> nue.push(e));\n    let suma = actual * (2 ** (8-calcularBitsSub(numSub)));\n    suma--;\n    for(let i = 3; i >= 0; i--){\n      if(suma >= 255){\n        nue[i] = suma - 255;\n        suma = suma - 255;\n      }\n      else{\n        nue[i] = suma;\n        i=-1;\n      }\n    }\n    return nue;\n  }\n\n  const checarDireccion = (direccion) =>{\n    for(let i =0 ; i<direccion.length; i++){\n      const valid = /^\\d+$/.test(direccion[i]);\n      if(!valid || (direccion[i].length < 0 && direccion[i].length > 4) || direccion[i]>255){\n        setValido(\"Direccion no valida ingresa otra con el formato punteado\");\n        setData([]);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const cabe = (numSub,clase) =>{\n    if(clase ===\"A\" && numSub <= 8388608) return true\n    else if(clase ===\"B\" && numSub <= 32768) return true\n    else if(clase ===\"C\" && numSub <= 128) return true\n    return false;\n  }\n\n  const calcularClase = (primerO, numSub) =>{\n    let clase;\n    const bits = calcularBitsSub(numSub);\n    if(primerO<=127) clase = \"A\"\n    else if(primerO > 127 && primerO <= 191)clase = \"B\"\n    else if(primerO > 191 && primerO <= 223) clase = \"C\"\n    else if(primerO > 223 && primerO <= 239) clase = \"D\"\n    else if(primerO > 240 && primerO <= 255) clase = \"E\"\n    else {\n      setValido(\"Red no valida ingresa otra\");\n      setData([]);\n      return \"F\"\n    }\n    setValido(\"Red Clase \" +clase+ \" con \" + bits + \" bit para subnetting\");\n    return clase;\n  }\n\n  const calcularDireccionRed = (clase, direccionIP) => {\n    let red = direccionIP;\n    if(clase == \"A\") red[1,2,3] = 0;\n    else if(clase ==\"B\") red[2,3] = 0;\n    else if(clase ==\"C\") red[3] = 0;\n    return red\n  }\n\n  const calcularMascara = (clase, numSub) =>{\n    const sub = calcularBitsSub(numSub);\n    if(clase == \"A\") return prestarAhost([255,0,0,0],sub);\n    else if(clase == \"B\") return prestarAhost([255,255,0,0],sub);\n    else if(clase ==\"C\") return prestarAhost([255,255,255,0],sub);\n    else return prestarAhost([255,255,255,255],sub);\n  }\n\n  const prestarAhost = (mascara, sub) =>{\n    let suma = 0;\n    for(let i = 0; i < sub; i++ ){\n      suma += 2**(7-i);\n    }\n    for(let i = 0; i<4;i++){\n      if(mascara[i] != 255){\n        if(suma>255){\n          mascara[i] = 255;\n          suma -= 255;\n        }else{\n          mascara[i] = suma;\n          suma = 0;\n          i = 4;\n        }\n      }\n    }\n    return mascara;\n  }\n\n\n  const calcularBitsSub = (numSub) =>{\n    let numero = 1;\n    while(2**numero < numSub) numero++;\n    return numero;\n  }\n\n  const direccionBrodcast = (red,clase) =>{\n    let nue = [];\n    red.map(e=> nue.push(e));\n    if(clase === \"A\"){\n      nue[1,2,3] = 255\n    }else if(clase ===\"B\"){\n      nue[2,3] = 255\n    }else if(clase===\"C\"){\n      nue[3] = 255\n    }\n    return nue;\n  }\n\n  return (\n    <div className=\"negro\">\n      <div className=\"todo\">\n        <h1>Bienvenido a calcular las subredes de una Direccion IP</h1>\n        <h2> Cual direccion quieres usar? </h2>\n        <Form layout = 'vertical'>\n          <label> Direccion IP </label>\n          <Input placeholder = \"Ingresa tu direccion IP\" name=\"direccionIP\"\n                  onChange={e => formedit(e)}/>\n          <label> Numero de Subredes </label>\n          <Input placeholder = \"Cuantas subredes deseas\" name=\"numSub\" type=\"number\"\n                  onChange = {e => formedit(e)}/>\n          <Button type=\"primary\" onClick={pushear} >Submit</Button>\n        </Form>\n        <h2>{valido}</h2>\n        <Table columns={columns} dataSource={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}