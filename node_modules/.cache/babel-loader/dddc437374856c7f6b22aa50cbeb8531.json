{"ast":null,"code":"var _jsxFileName = \"/home/diego/projectos/Redes/frontend/src/components/home/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Input, message, Table, Form, Button, InputNumber } from 'antd';\nimport useForm from '../../Hook/useForm.js';\n\nfunction Home() {\n  const [form, formedit] = useForm();\n  const [data, setData] = useState([]);\n  const [valido, setValido] = useState();\n  const columns = [{\n    title: \"Numero de Subred\",\n    dataIndex: \"subred\",\n    key: 'subred'\n  }, {\n    title: \"Direccion de Subred\",\n    dataIndex: \"direccion\",\n    key: 'direccion'\n  }, {\n    title: \"Primer dir IP Host\",\n    dataIndex: \"pip\",\n    key: 'pip'\n  }, {\n    title: \"Ultima dir IP Host\",\n    dataIndex: \"uip\",\n    key: 'uip'\n  }, {\n    title: \"Dir Brodcast\",\n    dataIndex: \"brodcast\",\n    key: 'brodcast'\n  }, {\n    title: \"Mascara\",\n    dataIndex: \"mascara\",\n    key: 'mascara'\n  }];\n\n  const pushear = () => {\n    if (form.direccionIP && form.numSub) {\n      const direccion = form.direccionIP.split(\".\");\n      const numSub = form.numSub;\n      let isnum = /^\\d+$/.test(numSub);\n      if (!isnum) setValido(\"Ingresa un numero de subredes valido\");\n      if (direccion.length !== 4) setValido(\"Direccion no valida ingresa otra con el formato punteado\");else {\n        for (numero in direccion) {\n          const valid = /^\\d+$/.test(numero);\n\n          if (!valid) {\n            setValido(\"Direccion no valida ingresa otra con el formato punteado\");\n            return;\n          }\n\n          setValido(\"todo bien\");\n        }\n      }\n    } else setValido(\"Porfavor ingresa todos los campos  \");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Bienvenido a calcular las direcciones ip\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \" Cual direccion quieres usar? \"), /*#__PURE__*/React.createElement(Form, {\n    layout: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Direccion IP\",\n    name: \"direccionIP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Ingresa tu direccion IP\",\n    name: \"direccionIP\",\n    onChange: e => formedit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Numbero de Subredes\",\n    name: \"numSub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Cuantas subredes deseas\",\n    name: \"numSub\",\n    type: \"number\",\n    onChange: e => formedit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: pushear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, valido), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/diego/projectos/Redes/frontend/src/components/home/Home.js"],"names":["React","useEffect","useState","Input","message","Table","Form","Button","InputNumber","useForm","Home","form","formedit","data","setData","valido","setValido","columns","title","dataIndex","key","pushear","direccionIP","numSub","direccion","split","isnum","test","length","numero","valid","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,WAA9C,QAAiE,MAAjE;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,IAAD,EAAMC,QAAN,IAAkBH,OAAO,EAA/B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,EAApC;AACA,QAAMe,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADc,EAMd;AACEF,IAAAA,KAAK,EAAE,qBADT;AAEEC,IAAAA,SAAS,EAAE,WAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANc,EAWd;AACEF,IAAAA,KAAK,EAAE,oBADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAXc,EAgBd;AACEF,IAAAA,KAAK,EAAE,oBADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAhBc,EAqBd;AACEF,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GArBc,EA0Bd;AACEF,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GA1Bc,CAAhB;;AAmCA,QAAMC,OAAO,GAAG,MAAK;AACnB,QAAGV,IAAI,CAACW,WAAL,IAAoBX,IAAI,CAACY,MAA5B,EAAmC;AACjC,YAAMC,SAAS,GAAGb,IAAI,CAACW,WAAL,CAAiBG,KAAjB,CAAuB,GAAvB,CAAlB;AACA,YAAMF,MAAM,GAAGZ,IAAI,CAACY,MAApB;AACA,UAAIG,KAAK,GAAG,QAAQC,IAAR,CAAaJ,MAAb,CAAZ;AACA,UAAG,CAACG,KAAJ,EAAWV,SAAS,CAAC,sCAAD,CAAT;AACX,UAAGQ,SAAS,CAACI,MAAV,KAAqB,CAAxB,EAA2BZ,SAAS,CAAC,0DAAD,CAAT,CAA3B,KACI;AACF,aAAIa,MAAJ,IAAcL,SAAd,EAAwB;AACtB,gBAAMM,KAAK,GAAG,QAAQH,IAAR,CAAaE,MAAb,CAAd;;AACA,cAAG,CAACC,KAAJ,EAAU;AACRd,YAAAA,SAAS,CAAC,0DAAD,CAAT;AACA;AACD;;AACDA,UAAAA,SAAS,CAAC,WAAD,CAAT;AACD;AACF;AAEF,KAjBD,MAiBMA,SAAS,CAAC,qCAAD,CAAT;AACP,GAnBD;;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,eAGE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,IAAI,EAAG,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAG,yBAArB;AAA+C,IAAA,IAAI,EAAC,aAApD;AACQ,IAAA,QAAQ,EAAEe,CAAC,IAAInB,QAAQ,CAACmB,CAAD,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,qBAAjB;AAAuC,IAAA,IAAI,EAAG,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAG,yBAArB;AAA+C,IAAA,IAAI,EAAC,QAApD;AAA6D,IAAA,IAAI,EAAC,QAAlE;AACQ,IAAA,QAAQ,EAAIA,CAAC,IAAInB,QAAQ,CAACmB,CAAD,CADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEV,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CATF,CAHF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,MAAL,CAhBF,eAiBE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEE,OAAhB;AAAyB,IAAA,UAAU,EAAEJ,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD;;AAED,eAAeH,IAAf","sourcesContent":["import React, {useEffect, useState }from 'react';\nimport { Input, message, Table, Form, Button, InputNumber } from 'antd';\nimport useForm from '../../Hook/useForm.js'\nfunction Home() {\n  const [form,formedit] = useForm();\n  const [data, setData] = useState([]);\n  const [valido, setValido] = useState();\n  const columns = [\n    {\n      title: \"Numero de Subred\",\n      dataIndex: \"subred\",\n      key: 'subred',\n    },\n    {\n      title: \"Direccion de Subred\",\n      dataIndex: \"direccion\",\n      key: 'direccion',\n    },\n    {\n      title: \"Primer dir IP Host\",\n      dataIndex: \"pip\",\n      key: 'pip',\n    },\n    {\n      title: \"Ultima dir IP Host\",\n      dataIndex: \"uip\",\n      key: 'uip',\n    },\n    {\n      title: \"Dir Brodcast\",\n      dataIndex: \"brodcast\",\n      key: 'brodcast',\n    },\n    {\n      title: \"Mascara\",\n      dataIndex: \"mascara\",\n      key: 'mascara',\n    }\n\n  ]\n\n\n  const pushear = () =>{\n    if(form.direccionIP && form.numSub){\n      const direccion = form.direccionIP.split(\".\");\n      const numSub = form.numSub;\n      let isnum = /^\\d+$/.test(numSub);\n      if(!isnum) setValido(\"Ingresa un numero de subredes valido\");\n      if(direccion.length !== 4) setValido(\"Direccion no valida ingresa otra con el formato punteado\");\n      else{\n        for(numero in direccion){\n          const valid = /^\\d+$/.test(numero);\n          if(!valid){\n            setValido(\"Direccion no valida ingresa otra con el formato punteado\");\n            return;\n          }\n          setValido(\"todo bien\")\n        }\n      }\n\n    }else setValido(\"Porfavor ingresa todos los campos  \")\n  }\n\n  return (\n    <div>\n      <h1>Bienvenido a calcular las direcciones ip</h1>\n      <h2> Cual direccion quieres usar? </h2>\n      <Form layout = 'horizontal'>\n        <Form.Item label=\"Direccion IP\" name = \"direccionIP\">\n          <Input placeholder = \"Ingresa tu direccion IP\" name=\"direccionIP\"\n                  onChange={e => formedit(e)}/>\n        </Form.Item>\n        <Form.Item label=\"Numbero de Subredes\" name = \"numSub\">\n          <Input placeholder = \"Cuantas subredes deseas\" name=\"numSub\" type=\"number\"\n                  onChange = {e => formedit(e)}/>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" onClick={pushear} >Submit</Button>\n        </Form.Item>\n      </Form>\n      <h1>{valido}</h1>\n      <Table columns={columns} dataSource={data} />\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}