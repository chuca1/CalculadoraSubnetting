{"ast":null,"code":"var _jsxFileName = \"/home/diego/projectos/Redes/frontend/src/components/home/Home.js\";\nimport React from 'react';\nimport { Input, message, Table, Form, Button } from 'antd';\nimport useForm from '../../Hook/useForm.js';\n\nfunction Home() {\n  const [form, formedit] = useForm();\n  form.direccion = 0;\n  const columns = [{\n    title: \"Numero de Subred\",\n    dataIndex: \"subred\",\n    key: 'subred'\n  }, {\n    title: \"Direccion de Subred\",\n    dataIndex: \"direccion\",\n    key: 'direccion'\n  }, {\n    title: \"Primer dir IP Host\",\n    dataIndex: \"pip\",\n    key: 'pip'\n  }, {\n    title: \"Ultima dir IP Host\",\n    dataIndex: \"uip\",\n    key: 'uip'\n  }, {\n    title: \"Dir Brodcast\",\n    dataIndex: \"brodcast\",\n    key: 'brodcast'\n  }, {\n    title: \"Mascara\",\n    dataIndex: \"mascara\",\n    key: 'mascara'\n  }];\n  const data = [{\n    subred: \"ds\",\n    direccion: \"ad\",\n    pip: \"da\",\n    uip: \"das\",\n    brodcast: \"da\",\n    mascara: \"asd\"\n  }];\n\n  const calcular = data => {\n    let tabla;\n\n    if (data.length > 0) {\n      tabla = /*#__PURE__*/React.createElement(Table, {\n        columns: columns,\n        dataSource: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      });\n    } else tabla = /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }\n    }, \" Ingresa una direccion valida con el formato punteado \");\n\n    return tabla;\n  };\n\n  const tabla = calcular(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Bienvenido a calcular las direcciones ip\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \" Cual direccion quieres usar? \"), /*#__PURE__*/React.createElement(Form, {\n    layout: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Direccion IP\",\n    name: \"diraccionIP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Ingresa tu direccion IP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Numbero de Subredes\",\n    name: \"numSub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Cuantas subredes deseas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Submit\"))), tabla);\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/diego/projectos/Redes/frontend/src/components/home/Home.js"],"names":["React","Input","message","Table","Form","Button","useForm","Home","form","formedit","direccion","columns","title","dataIndex","key","data","subred","pip","uip","brodcast","mascara","calcular","tabla","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, message, Table, Form, Button } from 'antd';\nimport useForm from '../../Hook/useForm.js'\nfunction Home() {\n  const [form,formedit] = useForm();\n  form.direccion = 0;\n  const columns = [\n    {\n      title: \"Numero de Subred\",\n      dataIndex: \"subred\",\n      key: 'subred',\n    },\n    {\n      title: \"Direccion de Subred\",\n      dataIndex: \"direccion\",\n      key: 'direccion',\n    },\n    {\n      title: \"Primer dir IP Host\",\n      dataIndex: \"pip\",\n      key: 'pip',\n    },\n    {\n      title: \"Ultima dir IP Host\",\n      dataIndex: \"uip\",\n      key: 'uip',\n    },\n    {\n      title: \"Dir Brodcast\",\n      dataIndex: \"brodcast\",\n      key: 'brodcast',\n    },\n    {\n      title: \"Mascara\",\n      dataIndex: \"mascara\",\n      key: 'mascara',\n    }\n\n  ]\n  const data = [{\n    subred: \"ds\",\n    direccion:\"ad\",\n    pip:\"da\",\n    uip:\"das\",\n    brodcast:\"da\",\n    mascara:\"asd\"\n  }];\n  const calcular = (data) => {\n    let tabla;\n    if(data.length > 0){\n      tabla = <Table columns={columns} dataSource={data} />\n    }\n    else tabla = <h1> Ingresa una direccion valida con el formato punteado </h1>\n    return tabla\n  }\n  const tabla = calcular(data);\n  return (\n    <div>\n      <h1>Bienvenido a calcular las direcciones ip</h1>\n      <h2> Cual direccion quieres usar? </h2>\n      <Form layout = 'horizontal'>\n        <Form.Item label=\"Direccion IP\" name = \"diraccionIP\">\n          <Input placeholder = \"Ingresa tu direccion IP\" />\n        </Form.Item>\n        <Form.Item label=\"Numbero de Subredes\" name = \"numSub\">\n          <Input placeholder = \"Cuantas subredes deseas\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\">Submit</Button>\n        </Form.Item>\n      </Form>\n      {tabla}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}